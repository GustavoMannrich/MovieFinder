{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Desktop\\\\Code\\\\React\\\\movieFinder\\\\src\\\\components\\\\movie-page.tsx\",\n    _s = $RefreshSig$();\n\n//import \"../styles/content.css\";\nimport \"../styles/main.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieDetails, getMovieReviews } from \"../scripts/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MoviePage = () => {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  const {\n    movieID\n  } = useParams();\n\n  const isNumber = str => {\n    if (typeof str !== \"string\") {\n      return false;\n    }\n\n    if (str.trim() === \"\") {\n      return false;\n    }\n\n    return !Number.isNaN(Number(str));\n  };\n\n  useEffect(() => {\n    if (movieID && isNumber(movieID)) {\n      const fetchMovieDetails = async () => {\n        setMovie(await getMovieDetails(parseInt(movieID)));\n      };\n\n      const fetchReviews = async () => {\n        setReviews(await getMovieReviews(parseInt(movieID), \"en-US\"));\n      };\n\n      fetchMovieDetails();\n      fetchReviews();\n    }\n  }, [movieID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MoviePage, \"p2t537RnKVqE8sQU7sM7V5Fb9Js=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["useParams","useEffect","useState","getMovieDetails","getMovieReviews","MoviePage","movie","setMovie","reviews","setReviews","movieID","isNumber","str","trim","Number","isNaN","fetchMovieDetails","parseInt","fetchReviews"],"sources":["C:/Users/Gustavo/Desktop/Code/React/movieFinder/src/components/movie-page.tsx"],"sourcesContent":["//import \"../styles/content.css\";\r\nimport \"../styles/main.css\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    IMovie,\r\n    getMovieDetails,\r\n    IReview,\r\n    getMovieReviews,\r\n} from \"../scripts/requests\";\r\n\r\nconst MoviePage = () => {\r\n    const [movie, setMovie] = useState<IMovie | null>(null);\r\n    const [reviews, setReviews] = useState<IReview[] | null>(null);\r\n    const { movieID } = useParams();\r\n\r\n    const isNumber = (str: string): boolean => {\r\n        if (typeof str !== \"string\") {\r\n            return false;\r\n        }\r\n\r\n        if (str.trim() === \"\") {\r\n            return false;\r\n        }\r\n\r\n        return !Number.isNaN(Number(str));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (movieID && isNumber(movieID)) {\r\n            const fetchMovieDetails = async () => {\r\n                setMovie(await getMovieDetails(parseInt(movieID)));\r\n            };\r\n\r\n            const fetchReviews = async () => {\r\n                setReviews(await getMovieReviews(parseInt(movieID), \"en-US\"));\r\n            };\r\n\r\n            fetchMovieDetails();\r\n            fetchReviews();\r\n        }\r\n    }, [movieID]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content-main\">\r\n                {/*<div className=\"content bg-image\">\r\n                    {movie && movie.backdrop_path && (\r\n                        <img\r\n                            className=\"fullscreenImage\"\r\n                            src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n                            alt=\"Background\"\r\n                        />\r\n                    )}\r\n                    <div\r\n                        className=\"mask\"\r\n                        style={{ backgroundColor: \"rgba(0, 0, 0, 0.8)\" }}\r\n                    >\r\n                        {movie && (\r\n                            <div className=\"text-white m-5\">\r\n                                <MDBContainer>\r\n                                    <MDBRow center>\r\n                                        <MDBCol size=\"md-2 me-4\" center>\r\n                                            {movie.poster_path && (\r\n                                                <img\r\n                                                    src={\r\n                                                        \"https://image.tmdb.org/t/p/w500\" +\r\n                                                        movie.poster_path\r\n                                                    }\r\n                                                    className=\"img-fluid rounded shadow-4 m-3\"\r\n                                                    alt=\"Pôster do filme\"\r\n                                                    style={{\r\n                                                        maxHeight: \"275px\",\r\n                                                    }}\r\n                                                />\r\n                                            )}\r\n                                            {!movie.poster_path && (\r\n                                                <img\r\n                                                    src=\"/PosterNotFound.jpg\"\r\n                                                    className=\"img-fluid rounded shadow-4 m-3\"\r\n                                                    alt=\"Poster do filme\"\r\n                                                    style={{\r\n                                                        maxHeight: \"275px\",\r\n                                                    }}\r\n                                                />\r\n                                            )}\r\n                                        </MDBCol>\r\n                                        <MDBCol size=\"md\">\r\n                                            <h1>{movie.title}</h1>\r\n                                            {movie.tagline && (\r\n                                                <h4\r\n                                                    style={{\r\n                                                        fontStyle: \"italic\",\r\n                                                    }}\r\n                                                >\r\n                                                    \"{movie.tagline}\"\r\n                                                </h4>\r\n                                            )}\r\n                                            <p>{movie.overview}</p>\r\n                                            <p>\r\n                                                Duração: {movie.runtime} minutos\r\n                                            </p>\r\n                                            <>\r\n                                                {movie.genres.map((g) => (\r\n                                                    <span\r\n                                                        className=\"me-3 text-info\"\r\n                                                        key={g.id}\r\n                                                    >\r\n                                                        {g.name}\r\n                                                    </span>\r\n                                                ))}\r\n                                            </>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n                                </MDBContainer>\r\n                                <MDBContainer style={{ height: \"auto\" }}>\r\n                                    <>\r\n                                        {reviews &&\r\n                                            reviews.map((r) => (\r\n                                                <p key={r.id}>{r.content}</p>\r\n                                            ))}\r\n                                    </>\r\n                                </MDBContainer>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                                            </div>*/}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":";;;AAAA;AACA,OAAO,oBAAP;AAEA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAEIC,eAFJ,EAIIC,eAJJ,QAKO,qBALP;;;;AAOA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAgB,IAAhB,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAmB,IAAnB,CAAtC;EACA,MAAM;IAAEQ;EAAF,IAAcV,SAAS,EAA7B;;EAEA,MAAMW,QAAQ,GAAIC,GAAD,IAA0B;IACvC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MACzB,OAAO,KAAP;IACH;;IAED,IAAIA,GAAG,CAACC,IAAJ,OAAe,EAAnB,EAAuB;MACnB,OAAO,KAAP;IACH;;IAED,OAAO,CAACC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,GAAD,CAAnB,CAAR;EACH,CAVD;;EAYAX,SAAS,CAAC,MAAM;IACZ,IAAIS,OAAO,IAAIC,QAAQ,CAACD,OAAD,CAAvB,EAAkC;MAC9B,MAAMM,iBAAiB,GAAG,YAAY;QAClCT,QAAQ,CAAC,MAAMJ,eAAe,CAACc,QAAQ,CAACP,OAAD,CAAT,CAAtB,CAAR;MACH,CAFD;;MAIA,MAAMQ,YAAY,GAAG,YAAY;QAC7BT,UAAU,CAAC,MAAML,eAAe,CAACa,QAAQ,CAACP,OAAD,CAAT,EAAoB,OAApB,CAAtB,CAAV;MACH,CAFD;;MAIAM,iBAAiB;MACjBE,YAAY;IACf;EACJ,CAbQ,EAaN,CAACR,OAAD,CAbM,CAAT;EAeA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAuFH,CAvHD;;GAAML,S;UAGkBL,S;;;KAHlBK,S;AAyHN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Desktop\\\\Code\\\\React\\\\movieFinder\\\\src\\\\components\\\\movie-page.tsx\",\n    _s = $RefreshSig$();\n\n//import \"../styles/content.css\";\nimport \"../styles/main.css\";\nimport { MDBContainer, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieDetails, getMovieReviews } from \"../scripts/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MoviePage = () => {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  const {\n    movieID\n  } = useParams();\n\n  const isNumber = str => {\n    if (typeof str !== \"string\") {\n      return false;\n    }\n\n    if (str.trim() === \"\") {\n      return false;\n    }\n\n    return !Number.isNaN(Number(str));\n  };\n\n  useEffect(() => {\n    if (movieID && isNumber(movieID)) {\n      const fetchMovieDetails = async () => {\n        setMovie(await getMovieDetails(parseInt(movieID)));\n      };\n\n      const fetchReviews = async () => {\n        setReviews(await getMovieReviews(parseInt(movieID), \"en-US\"));\n      };\n\n      fetchMovieDetails();\n      fetchReviews();\n    }\n  }, [movieID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-image\",\n          children: [movie && movie.backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"fullscreenImage\",\n            src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n            alt: \"Background\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mask content\",\n            style: {\n              backgroundColor: \"rgba(0, 0, 0, 0.8)\"\n            },\n            children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-white m-5\",\n              children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(MDBRow, {\n                  center: true,\n                  children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n                    size: \"md-2 me-4\",\n                    center: true,\n                    children: [movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n                      className: \"img-fluid rounded shadow-4 m-3\",\n                      alt: \"P\\xF4ster do filme\",\n                      style: {\n                        maxHeight: \"275px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 53\n                    }, this), !movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/PosterNotFound.jpg\",\n                      className: \"img-fluid rounded shadow-4 m-3\",\n                      alt: \"Poster do filme\",\n                      style: {\n                        maxHeight: \"275px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n                    size: \"md\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: movie.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 49\n                    }, this), movie.tagline && /*#__PURE__*/_jsxDEV(\"h4\", {\n                      style: {\n                        fontStyle: \"italic\"\n                      },\n                      children: [\"\\\"\", movie.tagline, \"\\\"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: movie.overview\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Dura\\xE7\\xE3o: \", movie.runtime, \" \", \"minutos\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: movie.genres.map(g => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"me-3 text-info\",\n                        children: g.name\n                      }, g.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n                style: {\n                  height: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: reviews && reviews.map(r => /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: r.content\n                  }, r.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MoviePage, \"p2t537RnKVqE8sQU7sM7V5Fb9Js=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["MDBContainer","MDBRow","MDBCol","useParams","useEffect","useState","getMovieDetails","getMovieReviews","MoviePage","movie","setMovie","reviews","setReviews","movieID","isNumber","str","trim","Number","isNaN","fetchMovieDetails","parseInt","fetchReviews","backdrop_path","backgroundColor","poster_path","maxHeight","title","tagline","fontStyle","overview","runtime","genres","map","g","name","id","height","r","content"],"sources":["C:/Users/Gustavo/Desktop/Code/React/movieFinder/src/components/movie-page.tsx"],"sourcesContent":["//import \"../styles/content.css\";\r\nimport \"../styles/main.css\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    IMovie,\r\n    getMovieDetails,\r\n    IReview,\r\n    getMovieReviews,\r\n} from \"../scripts/requests\";\r\n\r\nconst MoviePage = () => {\r\n    const [movie, setMovie] = useState<IMovie | null>(null);\r\n    const [reviews, setReviews] = useState<IReview[] | null>(null);\r\n    const { movieID } = useParams();\r\n\r\n    const isNumber = (str: string): boolean => {\r\n        if (typeof str !== \"string\") {\r\n            return false;\r\n        }\r\n\r\n        if (str.trim() === \"\") {\r\n            return false;\r\n        }\r\n\r\n        return !Number.isNaN(Number(str));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (movieID && isNumber(movieID)) {\r\n            const fetchMovieDetails = async () => {\r\n                setMovie(await getMovieDetails(parseInt(movieID)));\r\n            };\r\n\r\n            const fetchReviews = async () => {\r\n                setReviews(await getMovieReviews(parseInt(movieID), \"en-US\"));\r\n            };\r\n\r\n            fetchMovieDetails();\r\n            fetchReviews();\r\n        }\r\n    }, [movieID]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content-main\">\r\n                <div className=\"content\">\r\n                    <div className=\"bg-image\">\r\n                        {movie && movie.backdrop_path && (\r\n                            <img\r\n                                className=\"fullscreenImage\"\r\n                                src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n                                alt=\"Background\"\r\n                            />\r\n                        )}\r\n                        <div\r\n                            className=\"mask content\"\r\n                            style={{ backgroundColor: \"rgba(0, 0, 0, 0.8)\" }}\r\n                        >\r\n                            {movie && (\r\n                                <div className=\"text-white m-5\">\r\n                                    <MDBContainer>\r\n                                        <MDBRow center>\r\n                                            <MDBCol size=\"md-2 me-4\" center>\r\n                                                {movie.poster_path && (\r\n                                                    <img\r\n                                                        src={\r\n                                                            \"https://image.tmdb.org/t/p/w500\" +\r\n                                                            movie.poster_path\r\n                                                        }\r\n                                                        className=\"img-fluid rounded shadow-4 m-3\"\r\n                                                        alt=\"Pôster do filme\"\r\n                                                        style={{\r\n                                                            maxHeight: \"275px\",\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                                {!movie.poster_path && (\r\n                                                    <img\r\n                                                        src=\"/PosterNotFound.jpg\"\r\n                                                        className=\"img-fluid rounded shadow-4 m-3\"\r\n                                                        alt=\"Poster do filme\"\r\n                                                        style={{\r\n                                                            maxHeight: \"275px\",\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            </MDBCol>\r\n                                            <MDBCol size=\"md\">\r\n                                                <h1>{movie.title}</h1>\r\n                                                {movie.tagline && (\r\n                                                    <h4\r\n                                                        style={{\r\n                                                            fontStyle: \"italic\",\r\n                                                        }}\r\n                                                    >\r\n                                                        \"{movie.tagline}\"\r\n                                                    </h4>\r\n                                                )}\r\n                                                <p>{movie.overview}</p>\r\n                                                <p>\r\n                                                    Duração: {movie.runtime}{\" \"}\r\n                                                    minutos\r\n                                                </p>\r\n                                                <>\r\n                                                    {movie.genres.map((g) => (\r\n                                                        <span\r\n                                                            className=\"me-3 text-info\"\r\n                                                            key={g.id}\r\n                                                        >\r\n                                                            {g.name}\r\n                                                        </span>\r\n                                                    ))}\r\n                                                </>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    </MDBContainer>\r\n                                    <MDBContainer style={{ height: \"auto\" }}>\r\n                                        <>\r\n                                            {reviews &&\r\n                                                reviews.map((r) => (\r\n                                                    <p key={r.id}>\r\n                                                        {r.content}\r\n                                                    </p>\r\n                                                ))}\r\n                                        </>\r\n                                    </MDBContainer>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const axios = require(\"axios\");\n\nexport const getGeneros = async () => {\n  const generos = [];\n  await axios.get(\"http://localhost:3001/generos\").then(response => {\n    response.data.genres.forEach(g => {\n      generos.push(g);\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n\n  const customSort = (a, b) => {\n    if (a.name < b.name) {\n      return -1;\n    }\n\n    if (a.name > b.name) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  generos.sort(customSort);\n  return generos;\n};\nexport const getMovies = async (genero, adult, page, sort, pessoa, dataInicial, dataFinal, voteCount) => {\n  const movies = {\n    movie_details: [],\n    page: 0,\n    total_pages: 0,\n    total_results: 0\n  };\n  await axios.get(\"http://localhost:3001/descobrir\", {\n    params: {\n      genero: genero,\n      adult: adult,\n      page: page,\n      sort: sort,\n      pessoa: pessoa,\n      dataInicial: dataInicial,\n      dataFinal: dataFinal,\n      voteCount: voteCount\n    }\n  }).then(response => {\n    if (response.data) {\n      response.data.movies.forEach(m => {\n        movies.movie_details.push(m);\n      });\n      movies.page = response.data.page;\n      movies.total_pages = response.data.total_pages;\n      movies.total_results = response.data.total_results;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movies;\n};\nexport const getMoviesByKeyword = async keyword => {\n  var movies = [];\n\n  if (keyword.length < 2) {\n    return movies;\n  }\n\n  await axios.get(\"http://localhost:3001/moviesByKeyword\", {\n    params: {\n      keyword: keyword\n    }\n  }).then(response => {\n    if (response.data) {\n      response.data.forEach(movie => {\n        movies.push({\n          value: movie.id,\n          label: movie.title\n        });\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movies;\n};\nexport const getPeopleByKeyword = async keyword => {\n  var people = [];\n\n  if (keyword.length < 2) {\n    return people;\n  }\n\n  await axios.get(\"http://localhost:3001/peopleByKeyword\", {\n    params: {\n      keyword: keyword\n    }\n  }).then(response => {\n    if (response.data) {\n      response.data.forEach(person => {\n        people.push({\n          value: person.id,\n          label: person.name\n        });\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return people;\n};\nexport const getMovieDetails = async id => {\n  let movie = null;\n  await axios.get(\"http://localhost:3001/movie\", {\n    params: {\n      id: id\n    }\n  }).then(_ref => {\n    let {\n      data\n    } = _ref;\n\n    if (data) {\n      if (data.length > 0) {\n        movie = data[0];\n      }\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movie;\n};\nexport const getMovieReviews = async (movieId, language) => {\n  let movie = null;\n  await axios.get(\"http://localhost:3001/reviews\", {\n    params: {\n      movieId: movieId,\n      language: language\n    }\n  }).then(_ref2 => {\n    let {\n      data\n    } = _ref2;\n\n    if (data) {\n      if (data.length > 0) {\n        movie = data[0];\n      }\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movie;\n};","map":{"version":3,"names":["axios","require","getGeneros","generos","get","then","response","data","genres","forEach","g","push","catch","error","console","log","customSort","a","b","name","sort","getMovies","genero","adult","page","pessoa","dataInicial","dataFinal","voteCount","movies","movie_details","total_pages","total_results","params","m","getMoviesByKeyword","keyword","length","movie","value","id","label","title","getPeopleByKeyword","people","person","getMovieDetails","getMovieReviews","movieId","language"],"sources":["C:/Users/Gustavo/Desktop/Code/React/movieFinder/src/scripts/requests.ts"],"sourcesContent":["const axios = require(\"axios\");\r\n\r\ninterface IItem {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface IItems extends Array<IItem> {}\r\n\r\nexport const getGeneros = async (): Promise<IItems> => {\r\n  const generos: IItems = [];\r\n\r\n  await axios\r\n    .get(\"http://localhost:3001/generos\")\r\n    .then((response: any) => {\r\n      response.data.genres.forEach((g: IItem) => {\r\n        generos.push(g);\r\n      });\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n  const customSort = (a: IItem, b: IItem) => {\r\n    if (a.name < b.name) {\r\n      return -1;\r\n    }\r\n    if (a.name > b.name) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  generos.sort(customSort);\r\n\r\n  return generos;\r\n};\r\n\r\ninterface IMovieDetails {\r\n  poster_path: string;\r\n  adult: boolean;\r\n  overview: string;\r\n  release_date: string;\r\n  genres: Array<number>;\r\n  id: number;\r\n  original_title: string;\r\n  title: string;\r\n  backdrop_path: string;\r\n  vote_average: number;\r\n  budget: number;\r\n  revenue: number;\r\n  runtime: number;\r\n  tagline: string;\r\n}\r\n\r\nexport interface IMovies {\r\n  movie_details: Array<IMovieDetails>;\r\n  page: number;\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport const getMovies = async (\r\n  genero: string,\r\n  adult: boolean,\r\n  page: number,\r\n  sort: string,\r\n  pessoa: string,\r\n  dataInicial: Date | null,\r\n  dataFinal: Date | null,\r\n  voteCount: number\r\n): Promise<IMovies> => {\r\n  const movies: IMovies = {\r\n    movie_details: [],\r\n    page: 0,\r\n    total_pages: 0,\r\n    total_results: 0,\r\n  };\r\n\r\n  await axios\r\n    .get(\"http://localhost:3001/descobrir\", {\r\n      params: {\r\n        genero: genero,\r\n        adult: adult,\r\n        page: page,\r\n        sort: sort,\r\n        pessoa: pessoa,\r\n        dataInicial: dataInicial,\r\n        dataFinal: dataFinal,\r\n        voteCount: voteCount,\r\n      },\r\n    })\r\n    .then((response: any) => {\r\n      if (response.data) {\r\n        response.data.movies.forEach((m: IMovieDetails) => {\r\n          movies.movie_details.push(m);\r\n        });\r\n\r\n        movies.page = response.data.page;\r\n        movies.total_pages = response.data.total_pages;\r\n        movies.total_results = response.data.total_results;\r\n      }\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n  return movies;\r\n};\r\n\r\nexport const getMoviesByKeyword = async (keyword: string) => {\r\n  var movies: { value: number; label: string }[] = [];\r\n\r\n  if (keyword.length < 2) {\r\n    return movies;\r\n  }\r\n\r\n  await axios\r\n    .get(\"http://localhost:3001/moviesByKeyword\", {\r\n      params: {\r\n        keyword: keyword,\r\n      },\r\n    })\r\n    .then((response: any) => {\r\n      if (response.data) {\r\n        response.data.forEach((movie: { id: number; title: string }) => {\r\n          movies.push({ value: movie.id, label: movie.title });\r\n        });\r\n      }\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n  return movies;\r\n};\r\n\r\nexport const getPeopleByKeyword = async (keyword: string) => {\r\n  var people: { value: number; label: string }[] = [];\r\n\r\n  if (keyword.length < 2) {\r\n    return people;\r\n  }\r\n\r\n  await axios\r\n    .get(\"http://localhost:3001/peopleByKeyword\", {\r\n      params: {\r\n        keyword: keyword,\r\n      },\r\n    })\r\n    .then((response: any) => {\r\n      if (response.data) {\r\n        response.data.forEach((person: { id: number; name: string }) => {\r\n          people.push({ value: person.id, label: person.name });\r\n        });\r\n      }\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n  return people;\r\n};\r\n\r\ninterface IGenre {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface IProductionCompany {\r\n  id: number;\r\n  logo_path: string;\r\n  name: string;\r\n  origin_country: string;\r\n}\r\n\r\ninterface IProductionCountry {\r\n  iso_3166_1: string;\r\n  name: string;\r\n}\r\n\r\ninterface ISpokenLanguage {\r\n  iso_639_1: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IMovie {\r\n  adult: boolean;\r\n  backdrop_path: string;\r\n  belongs_to_collection?: any;\r\n  budget: number;\r\n  genres: IGenre[];\r\n  homepage: string;\r\n  id: number;\r\n  imdb_id: string;\r\n  original_language: string;\r\n  original_title: string;\r\n  overview: string;\r\n  popularity: number;\r\n  poster_path?: any;\r\n  production_companies: IProductionCompany[];\r\n  production_countries: IProductionCountry[];\r\n  release_date: string;\r\n  revenue: number;\r\n  runtime: number;\r\n  spoken_languages: ISpokenLanguage[];\r\n  status: string;\r\n  tagline: string;\r\n  title: string;\r\n  video: boolean;\r\n  vote_average: number;\r\n  vote_count: number;\r\n}\r\n\r\nexport const getMovieDetails = async (id: number): Promise<IMovie | null> => {\r\n  let movie: IMovie | null = null;\r\n\r\n  await axios\r\n    .get(\"http://localhost:3001/movie\", {\r\n      params: {\r\n        id: id,\r\n      },\r\n    })\r\n    .then(({ data }: any) => {\r\n      if (data) {\r\n        if (data.length > 0) {\r\n          movie = data[0];\r\n        }\r\n      }\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n  return movie;\r\n};\r\n\r\nexport const getMovieReviews = async (\r\n  movieId: number,\r\n  language: string\r\n): Promise<IMovie | null> => {\r\n  let movie: IMovie | null = null;\r\n\r\n  await axios\r\n    .get(\"http://localhost:3001/reviews\", {\r\n      params: {\r\n        movieId: movieId,\r\n        language: language,\r\n      },\r\n    })\r\n    .then(({ data }: any) => {\r\n      if (data) {\r\n        if (data.length > 0) {\r\n          movie = data[0];\r\n        }\r\n      }\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n  return movie;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
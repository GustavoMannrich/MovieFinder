{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Desktop\\\\Code\\\\Movie Finder\\\\moviefinder\\\\src\\\\components\\\\movie-page.tsx\",\n    _s = $RefreshSig$();\n\nimport '../styles/content.css';\nimport '../styles/main.css';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from '../scripts/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MoviePage = () => {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n  const {\n    movieID\n  } = useParams();\n\n  const isNumber = str => {\n    if (typeof str !== 'string') {\n      return false;\n    }\n\n    if (str.trim() === '') {\n      return false;\n    }\n\n    return !Number.isNaN(Number(str));\n  };\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      if (movieID && isNumber(movieID)) {\n        setMovie(await getMovieDetails(parseInt(movieID)));\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-image\",\n      children: [movie && movie.backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n        className: \"img-fluid\",\n        alt: \"Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mask\",\n        style: {\n          backgroundColor: 'rgba(0, 0, 0, 0.6)'\n        },\n        children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white m-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), movie.tagline && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\\"\", movie.tagline, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 47\n          }, this), movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://image.tmdb.org/t/p/w500' + movie.poster_path,\n            className: \"img-fluid shadow-4 m-3\",\n            alt: \"P\\xF4ster do filme\",\n            style: {\n              maxHeight: '275px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), movie.backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://image.tmdb.org/t/p/w500' + movie.backdrop_path,\n            className: \"img-fluid shadow-4 m-3\",\n            alt: \"P\\xF4ster do filme\",\n            style: {\n              maxHeight: '275px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Dura\\xE7\\xE3o: \", movie.runtime, \" minutos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: movie.genres.map(g => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"me-3 text-info\",\n              children: g.name\n            }, g.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this))\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MoviePage, \"JmQ6zbhVrVniHb7QJ2rqFPxZHYA=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["useParams","useEffect","useState","getMovieDetails","MoviePage","movie","setMovie","movieID","isNumber","str","trim","Number","isNaN","fetchMovieDetails","parseInt","backdrop_path","backgroundColor","title","tagline","poster_path","maxHeight","overview","runtime","genres","map","g","name","id"],"sources":["C:/Users/gusta/Desktop/Code/Movie Finder/moviefinder/src/components/movie-page.tsx"],"sourcesContent":["import '../styles/content.css';\r\nimport '../styles/main.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { IMovie, getMovieDetails } from '../scripts/requests';\r\n\r\nconst MoviePage = () => {\r\n    const [movie, setMovie] = useState<IMovie | null>(null);\r\n    const { movieID } = useParams();\r\n\r\n    const isNumber = (str: string): boolean => {\r\n        if (typeof str !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        if (str.trim() === '') {\r\n            return false;\r\n        }\r\n\r\n        return !Number.isNaN(Number(str));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchMovieDetails = async () => {\r\n            if (movieID && isNumber(movieID)) {\r\n                setMovie(await getMovieDetails(parseInt(movieID)));\r\n            }\r\n        };\r\n\r\n        fetchMovieDetails();\r\n    }, [movieID]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-image\">\r\n                {movie && movie.backdrop_path && (\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n                        className=\"img-fluid\"\r\n                        alt=\"Background\"\r\n                    />\r\n                )}\r\n                <div\r\n                    className=\"mask\"\r\n                    style={{ backgroundColor: 'rgba(0, 0, 0, 0.6)' }}\r\n                >\r\n                    {movie && (\r\n                        <div className=\"text-white m-5\">\r\n                            <h1>{movie.title}</h1>\r\n                            {movie.tagline && <h4>\"{movie.tagline}\"</h4>}\r\n                            {movie.poster_path && (\r\n                                <img\r\n                                    src={\r\n                                        'https://image.tmdb.org/t/p/w500' +\r\n                                        movie.poster_path\r\n                                    }\r\n                                    className=\"img-fluid shadow-4 m-3\"\r\n                                    alt=\"Pôster do filme\"\r\n                                    style={{ maxHeight: '275px' }}\r\n                                />\r\n                            )}\r\n                            {movie.backdrop_path && (\r\n                                <img\r\n                                    src={\r\n                                        'https://image.tmdb.org/t/p/w500' +\r\n                                        movie.backdrop_path\r\n                                    }\r\n                                    className=\"img-fluid shadow-4 m-3\"\r\n                                    alt=\"Pôster do filme\"\r\n                                    style={{ maxHeight: '275px' }}\r\n                                />\r\n                            )}\r\n                            <p>{movie.overview}</p>\r\n                            <p>Duração: {movie.runtime} minutos</p>\r\n\r\n                            <>\r\n                                {movie.genres.map((g) => (\r\n                                    <span className=\"me-3 text-info\" key={g.id}>\r\n                                        {g.name}\r\n                                    </span>\r\n                                ))}\r\n                            </>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,OAAO,oBAAP;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAiBC,eAAjB,QAAwC,qBAAxC;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAgB,IAAhB,CAAlC;EACA,MAAM;IAAEK;EAAF,IAAcP,SAAS,EAA7B;;EAEA,MAAMQ,QAAQ,GAAIC,GAAD,IAA0B;IACvC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MACzB,OAAO,KAAP;IACH;;IAED,IAAIA,GAAG,CAACC,IAAJ,OAAe,EAAnB,EAAuB;MACnB,OAAO,KAAP;IACH;;IAED,OAAO,CAACC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,GAAD,CAAnB,CAAR;EACH,CAVD;;EAYAR,SAAS,CAAC,MAAM;IACZ,MAAMY,iBAAiB,GAAG,YAAY;MAClC,IAAIN,OAAO,IAAIC,QAAQ,CAACD,OAAD,CAAvB,EAAkC;QAC9BD,QAAQ,CAAC,MAAMH,eAAe,CAACW,QAAQ,CAACP,OAAD,CAAT,CAAtB,CAAR;MACH;IACJ,CAJD;;IAMAM,iBAAiB;EACpB,CARQ,EAQN,CAACN,OAAD,CARM,CAAT;EAUA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,UAAf;MAAA,WACKF,KAAK,IAAIA,KAAK,CAACU,aAAf,iBACG;QACI,GAAG,EAAG,sCAAqCV,KAAK,CAACU,aAAc,EADnE;QAEI,SAAS,EAAC,WAFd;QAGI,GAAG,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA,QAFR,eAQI;QACI,SAAS,EAAC,MADd;QAEI,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAnB,CAFX;QAAA,UAIKX,KAAK,iBACF;UAAK,SAAS,EAAC,gBAAf;UAAA,wBACI;YAAA,UAAKA,KAAK,CAACY;UAAX;YAAA;YAAA;YAAA;UAAA,QADJ,EAEKZ,KAAK,CAACa,OAAN,iBAAiB;YAAA,iBAAMb,KAAK,CAACa,OAAZ;UAAA;YAAA;YAAA;YAAA;UAAA,QAFtB,EAGKb,KAAK,CAACc,WAAN,iBACG;YACI,GAAG,EACC,oCACAd,KAAK,CAACc,WAHd;YAKI,SAAS,EAAC,wBALd;YAMI,GAAG,EAAC,oBANR;YAOI,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAb;UAPX;YAAA;YAAA;YAAA;UAAA,QAJR,EAcKf,KAAK,CAACU,aAAN,iBACG;YACI,GAAG,EACC,oCACAV,KAAK,CAACU,aAHd;YAKI,SAAS,EAAC,wBALd;YAMI,GAAG,EAAC,oBANR;YAOI,KAAK,EAAE;cAAEK,SAAS,EAAE;YAAb;UAPX;YAAA;YAAA;YAAA;UAAA,QAfR,eAyBI;YAAA,UAAIf,KAAK,CAACgB;UAAV;YAAA;YAAA;YAAA;UAAA,QAzBJ,eA0BI;YAAA,8BAAahB,KAAK,CAACiB,OAAnB;UAAA;YAAA;YAAA;YAAA;UAAA,QA1BJ,eA4BI;YAAA,UACKjB,KAAK,CAACkB,MAAN,CAAaC,GAAb,CAAkBC,CAAD,iBACd;cAAM,SAAS,EAAC,gBAAhB;cAAA,UACKA,CAAC,CAACC;YADP,GAAsCD,CAAC,CAACE,EAAxC;cAAA;cAAA;cAAA;YAAA,QADH;UADL,iBA5BJ;QAAA;UAAA;UAAA;UAAA;QAAA;MALR;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAwDH,CAlFD;;GAAMvB,S;UAEkBJ,S;;;KAFlBI,S;AAoFN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}
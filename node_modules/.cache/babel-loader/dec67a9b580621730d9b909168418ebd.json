{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Desktop\\\\Code\\\\React\\\\movieFinder\\\\src\\\\components\\\\movie\\\\content\\\\video-category.tsx\";\nimport \"../../../styles/main.css\";\nimport { MDBAccordion, MDBAccordionItem } from \"mdb-react-ui-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoCategory = _ref => {\n  let {\n    category,\n    videos\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videos && videos.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-info\",\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MDBAccordion, {\n        flush: true,\n        style: {\n          minWidth: \"100%\"\n        },\n        children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(MDBAccordionItem, {\n          collapseId: index + 1,\n          headerTitle: video.name,\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              title: video.name,\n              src: `https://www.youtube.com/embed/${video.key}`,\n              allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_c = VideoCategory;\nexport default VideoCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCategory\");","map":{"version":3,"names":["MDBAccordion","MDBAccordionItem","VideoCategory","category","videos","length","minWidth","map","video","index","name","backgroundColor","key"],"sources":["C:/Users/Gustavo/Desktop/Code/React/movieFinder/src/components/movie/content/video-category.tsx"],"sourcesContent":["import \"../../../styles/main.css\";\r\nimport { MDBAccordion, MDBAccordionItem } from \"mdb-react-ui-kit\";\r\nimport { IVideo } from \"../../../utils/interfaces\";\r\n\r\ninterface IVideoCategoryProps {\r\n    category: string;\r\n    videos: IVideo[] | undefined;\r\n}\r\n\r\nconst VideoCategory = ({ category, videos }: IVideoCategoryProps) => {\r\n    return (\r\n        <>\r\n            {videos && videos.length > 0 && (\r\n                <>\r\n                    <h6 className=\"text-info\">{category}</h6>\r\n                    <MDBAccordion\r\n                        flush\r\n                        style={{\r\n                            minWidth: \"100%\",\r\n                        }}\r\n                    >\r\n                        {videos.map((video, index) => (\r\n                            <MDBAccordionItem\r\n                                key={index}\r\n                                collapseId={index + 1}\r\n                                headerTitle={video.name}\r\n                                style={{\r\n                                    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n                                }}\r\n                            >\r\n                                <div className=\"video-container\">\r\n                                    <iframe\r\n                                        title={video.name}\r\n                                        src={`https://www.youtube.com/embed/${video.key}`}\r\n                                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    ></iframe>\r\n                                </div>\r\n                            </MDBAccordionItem>\r\n                        ))}\r\n                    </MDBAccordion>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VideoCategory;\r\n"],"mappings":";AAAA,OAAO,0BAAP;AACA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,kBAA/C;;;;AAQA,MAAMC,aAAa,GAAG,QAA+C;EAAA,IAA9C;IAAEC,QAAF;IAAYC;EAAZ,CAA8C;EACjE,oBACI;IAAA,UACKA,MAAM,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAA1B,iBACG;MAAA,wBACI;QAAI,SAAS,EAAC,WAAd;QAAA,UAA2BF;MAA3B;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,YAAD;QACI,KAAK,MADT;QAEI,KAAK,EAAE;UACHG,QAAQ,EAAE;QADP,CAFX;QAAA,UAMKF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACR,QAAC,gBAAD;UAEI,UAAU,EAAEA,KAAK,GAAG,CAFxB;UAGI,WAAW,EAAED,KAAK,CAACE,IAHvB;UAII,KAAK,EAAE;YACHC,eAAe,EAAE;UADd,CAJX;UAAA,uBAQI;YAAK,SAAS,EAAC,iBAAf;YAAA,uBACI;cACI,KAAK,EAAEH,KAAK,CAACE,IADjB;cAEI,GAAG,EAAG,iCAAgCF,KAAK,CAACI,GAAI,EAFpD;cAGI,KAAK,EAAC;YAHV;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QARJ,GACSH,KADT;UAAA;UAAA;UAAA;QAAA,QADH;MANL;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;EAFR,iBADJ;AAkCH,CAnCD;;KAAMP,a;AAqCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}
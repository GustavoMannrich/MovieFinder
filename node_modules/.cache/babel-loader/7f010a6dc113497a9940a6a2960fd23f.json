{"ast":null,"code":"const axios = require('axios');\n\nexport const getGeneros = async () => {\n  const generos = [];\n  await axios.get('http://localhost:3001/generos').then(response => {\n    response.data.genres.forEach(g => {\n      generos.push(g);\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n\n  const customSort = (a, b) => {\n    if (a.name < b.name) {\n      return -1;\n    }\n\n    if (a.name > b.name) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  generos.sort(customSort);\n  return generos;\n};\nexport const getMovies = async (genero, adult, page, sort) => {\n  const movies = {\n    movie_details: [],\n    page: 0,\n    total_pages: 0,\n    total_results: 0\n  };\n  await axios.get('http://localhost:3001/descobrir', {\n    params: {\n      genero: genero,\n      adult: adult,\n      page: page,\n      sort: sort\n    }\n  }).then(response => {\n    if (response.data) {\n      response.data.movies.forEach(m => {\n        movies.movie_details.push(m);\n      });\n      movies.page = response.data.page;\n      movies.total_pages = response.data.total_pages;\n      movies.total_results = response.data.total_results;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movies;\n};\nexport const getMoviesByKeyword = keyword => {\n  return [{\n    value: 1,\n    label: 'batman'\n  }, {\n    value: 2,\n    label: 'batman Returns'\n  }, {\n    value: 10,\n    label: 'batman Begins'\n  }, {\n    value: 11,\n    label: 'spiderman'\n  }, {\n    value: 20,\n    label: 'big spider'\n  }, {\n    value: 21,\n    label: 'man of madden'\n  }];\n};","map":{"version":3,"names":["axios","require","getGeneros","generos","get","then","response","data","genres","forEach","g","push","catch","error","console","log","customSort","a","b","name","sort","getMovies","genero","adult","page","movies","movie_details","total_pages","total_results","params","m","getMoviesByKeyword","keyword","value","label"],"sources":["C:/Users/gusta/Desktop/Code/Movie Finder/moviefinder/src/scripts/requests.ts"],"sourcesContent":["const axios = require('axios');\r\n\r\ninterface IGenero {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface IGeneros extends Array<IGenero> {}\r\n\r\nexport const getGeneros = async (): Promise<IGeneros> => {\r\n    const generos: IGeneros = [];\r\n\r\n    await axios\r\n        .get('http://localhost:3001/generos')\r\n        .then((response: any) => {\r\n            response.data.genres.forEach((g: IGenero) => {\r\n                generos.push(g);\r\n            });\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    const customSort = (a: IGenero, b: IGenero) => {\r\n        if (a.name < b.name) {\r\n            return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    generos.sort(customSort);\r\n\r\n    return generos;\r\n};\r\n\r\ninterface IMovie {\r\n    poster_path: string;\r\n    adult: boolean;\r\n    overview: string;\r\n    release_date: string;\r\n    genres: Array<number>;\r\n    id: number;\r\n    original_title: string;\r\n    title: string;\r\n    backdrop_path: string;\r\n    vote_average: number;\r\n    budget: number;\r\n    revenue: number;\r\n    runtime: number;\r\n    tagline: string;\r\n}\r\n\r\nexport interface IMovies {\r\n    movie_details: Array<IMovie>;\r\n    page: number;\r\n    total_pages: number;\r\n    total_results: number;\r\n}\r\n\r\nexport const getMovies = async (\r\n    genero: string,\r\n    adult: boolean,\r\n    page: number,\r\n    sort: string\r\n): Promise<IMovies> => {\r\n    const movies: IMovies = {\r\n        movie_details: [],\r\n        page: 0,\r\n        total_pages: 0,\r\n        total_results: 0,\r\n    };\r\n\r\n    await axios\r\n        .get('http://localhost:3001/descobrir', {\r\n            params: {\r\n                genero: genero,\r\n                adult: adult,\r\n                page: page,\r\n                sort: sort,\r\n            },\r\n        })\r\n        .then((response: any) => {\r\n            if (response.data) {\r\n                response.data.movies.forEach((m: IMovie) => {\r\n                    movies.movie_details.push(m);\r\n                });\r\n\r\n                movies.page = response.data.page;\r\n                movies.total_pages = response.data.total_pages;\r\n                movies.total_results = response.data.total_results;\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return movies;\r\n};\r\n\r\nexport const getMoviesByKeyword = (\r\n    keyword: string\r\n): { value: number; label: string }[] => {\r\n    return [\r\n        { value: 1, label: 'batman' },\r\n        { value: 2, label: 'batman Returns' },\r\n        { value: 10, label: 'batman Begins' },\r\n        { value: 11, label: 'spiderman' },\r\n        { value: 20, label: 'big spider' },\r\n        { value: 21, label: 'man of madden' },\r\n    ];\r\n};\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AASA,OAAO,MAAMC,UAAU,GAAG,YAA+B;EACrD,MAAMC,OAAiB,GAAG,EAA1B;EAEA,MAAMH,KAAK,CACNI,GADC,CACG,+BADH,EAEDC,IAFC,CAEKC,QAAD,IAAmB;IACrBA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA8BC,CAAD,IAAgB;MACzCP,OAAO,CAACQ,IAAR,CAAaD,CAAb;IACH,CAFD;EAGH,CANC,EAODE,KAPC,CAOMC,KAAD,IAAgB;IACnBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH,CATC,CAAN;;EAWA,MAAMG,UAAU,GAAG,CAACC,CAAD,EAAaC,CAAb,KAA4B;IAC3C,IAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;MACjB,OAAO,CAAC,CAAR;IACH;;IACD,IAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;MACjB,OAAO,CAAP;IACH;;IACD,OAAO,CAAP;EACH,CARD;;EAUAhB,OAAO,CAACiB,IAAR,CAAaJ,UAAb;EAEA,OAAOb,OAAP;AACH,CA3BM;AAqDP,OAAO,MAAMkB,SAAS,GAAG,OACrBC,MADqB,EAErBC,KAFqB,EAGrBC,IAHqB,EAIrBJ,IAJqB,KAKF;EACnB,MAAMK,MAAe,GAAG;IACpBC,aAAa,EAAE,EADK;IAEpBF,IAAI,EAAE,CAFc;IAGpBG,WAAW,EAAE,CAHO;IAIpBC,aAAa,EAAE;EAJK,CAAxB;EAOA,MAAM5B,KAAK,CACNI,GADC,CACG,iCADH,EACsC;IACpCyB,MAAM,EAAE;MACJP,MAAM,EAAEA,MADJ;MAEJC,KAAK,EAAEA,KAFH;MAGJC,IAAI,EAAEA,IAHF;MAIJJ,IAAI,EAAEA;IAJF;EAD4B,CADtC,EASDf,IATC,CASKC,QAAD,IAAmB;IACrB,IAAIA,QAAQ,CAACC,IAAb,EAAmB;MACfD,QAAQ,CAACC,IAAT,CAAckB,MAAd,CAAqBhB,OAArB,CAA8BqB,CAAD,IAAe;QACxCL,MAAM,CAACC,aAAP,CAAqBf,IAArB,CAA0BmB,CAA1B;MACH,CAFD;MAIAL,MAAM,CAACD,IAAP,GAAclB,QAAQ,CAACC,IAAT,CAAciB,IAA5B;MACAC,MAAM,CAACE,WAAP,GAAqBrB,QAAQ,CAACC,IAAT,CAAcoB,WAAnC;MACAF,MAAM,CAACG,aAAP,GAAuBtB,QAAQ,CAACC,IAAT,CAAcqB,aAArC;IACH;EACJ,CAnBC,EAoBDhB,KApBC,CAoBMC,KAAD,IAAgB;IACnBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH,CAtBC,CAAN;EAwBA,OAAOY,MAAP;AACH,CAtCM;AAwCP,OAAO,MAAMM,kBAAkB,GAC3BC,OAD8B,IAEO;EACrC,OAAO,CACH;IAAEC,KAAK,EAAE,CAAT;IAAYC,KAAK,EAAE;EAAnB,CADG,EAEH;IAAED,KAAK,EAAE,CAAT;IAAYC,KAAK,EAAE;EAAnB,CAFG,EAGH;IAAED,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CAHG,EAIH;IAAED,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CAJG,EAKH;IAAED,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CALG,EAMH;IAAED,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CANG,CAAP;AAQH,CAXM"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Desktop\\\\Code\\\\React\\\\movieFinder\\\\src\\\\components\\\\movie-page.tsx\",\n    _s = $RefreshSig$();\n\n//import \"../styles/content.css\";\nimport \"../styles/main.css\";\nimport { MDBContainer, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieDetails, getMovieReviews } from \"../scripts/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MoviePage = () => {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  const {\n    movieID\n  } = useParams();\n\n  const isNumber = str => {\n    if (typeof str !== \"string\") {\n      return false;\n    }\n\n    if (str.trim() === \"\") {\n      return false;\n    }\n\n    return !Number.isNaN(Number(str));\n  };\n\n  useEffect(() => {\n    if (movieID && isNumber(movieID)) {\n      const fetchMovieDetails = async () => {\n        setMovie(await getMovieDetails(parseInt(movieID)));\n      };\n\n      const fetchReviews = async () => {\n        setReviews(await getMovieReviews(parseInt(movieID), \"en-US\"));\n      };\n\n      fetchMovieDetails();\n      fetchReviews();\n    }\n  }, [movieID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-image\",\n      children: [movie && movie.backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"fullscreenImage\",\n        src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n        alt: \"Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mask\",\n        style: {\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n          height: \"auto\"\n        },\n        children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white m-5\",\n          children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: /*#__PURE__*/_jsxDEV(MDBRow, {\n              center: true,\n              children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n                size: \"md-2 me-4\",\n                center: true,\n                children: [movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n                  className: \"img-fluid rounded shadow-4 m-3\",\n                  alt: \"P\\xF4ster do filme\",\n                  style: {\n                    maxHeight: \"275px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 45\n                }, this), !movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/PosterNotFound.jpg\",\n                  className: \"img-fluid rounded shadow-4 m-3\",\n                  alt: \"Poster do filme\",\n                  style: {\n                    maxHeight: \"275px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n                size: \"md\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), movie.tagline && /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontStyle: \"italic\"\n                  },\n                  children: [\"\\\"\", movie.tagline, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: movie.overview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Dura\\xE7\\xE3o: \", movie.runtime, \" minutos\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: movie.genres.map(g => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"me-3 text-info\",\n                    children: g.name\n                  }, g.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: reviews && reviews.map(r => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: r.content\n              }, r.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 45\n              }, this))\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MoviePage, \"p2t537RnKVqE8sQU7sM7V5Fb9Js=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["MDBContainer","MDBRow","MDBCol","useParams","useEffect","useState","getMovieDetails","getMovieReviews","MoviePage","movie","setMovie","reviews","setReviews","movieID","isNumber","str","trim","Number","isNaN","fetchMovieDetails","parseInt","fetchReviews","backdrop_path","backgroundColor","height","poster_path","maxHeight","title","tagline","fontStyle","overview","runtime","genres","map","g","name","id","r","content"],"sources":["C:/Users/Gustavo/Desktop/Code/React/movieFinder/src/components/movie-page.tsx"],"sourcesContent":["//import \"../styles/content.css\";\r\nimport \"../styles/main.css\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    IMovie,\r\n    getMovieDetails,\r\n    IReview,\r\n    getMovieReviews,\r\n} from \"../scripts/requests\";\r\n\r\nconst MoviePage = () => {\r\n    const [movie, setMovie] = useState<IMovie | null>(null);\r\n    const [reviews, setReviews] = useState<IReview[] | null>(null);\r\n    const { movieID } = useParams();\r\n\r\n    const isNumber = (str: string): boolean => {\r\n        if (typeof str !== \"string\") {\r\n            return false;\r\n        }\r\n\r\n        if (str.trim() === \"\") {\r\n            return false;\r\n        }\r\n\r\n        return !Number.isNaN(Number(str));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (movieID && isNumber(movieID)) {\r\n            const fetchMovieDetails = async () => {\r\n                setMovie(await getMovieDetails(parseInt(movieID)));\r\n            };\r\n\r\n            const fetchReviews = async () => {\r\n                setReviews(await getMovieReviews(parseInt(movieID), \"en-US\"));\r\n            };\r\n\r\n            fetchMovieDetails();\r\n            fetchReviews();\r\n        }\r\n    }, [movieID]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-image\">\r\n                {movie && movie.backdrop_path && (\r\n                    <img\r\n                        className=\"fullscreenImage\"\r\n                        src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n                        alt=\"Background\"\r\n                    />\r\n                )}\r\n                <div\r\n                    className=\"mask\"\r\n                    style={{\r\n                        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n                        height: \"auto\",\r\n                    }}\r\n                >\r\n                    {movie && (\r\n                        <div className=\"text-white m-5\">\r\n                            <MDBContainer>\r\n                                <MDBRow center>\r\n                                    <MDBCol size=\"md-2 me-4\" center>\r\n                                        {movie.poster_path && (\r\n                                            <img\r\n                                                src={\r\n                                                    \"https://image.tmdb.org/t/p/w500\" +\r\n                                                    movie.poster_path\r\n                                                }\r\n                                                className=\"img-fluid rounded shadow-4 m-3\"\r\n                                                alt=\"Pôster do filme\"\r\n                                                style={{ maxHeight: \"275px\" }}\r\n                                            />\r\n                                        )}\r\n                                        {!movie.poster_path && (\r\n                                            <img\r\n                                                src=\"/PosterNotFound.jpg\"\r\n                                                className=\"img-fluid rounded shadow-4 m-3\"\r\n                                                alt=\"Poster do filme\"\r\n                                                style={{ maxHeight: \"275px\" }}\r\n                                            />\r\n                                        )}\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"md\">\r\n                                        <h1>{movie.title}</h1>\r\n                                        {movie.tagline && (\r\n                                            <h4 style={{ fontStyle: \"italic\" }}>\r\n                                                \"{movie.tagline}\"\r\n                                            </h4>\r\n                                        )}\r\n                                        <p>{movie.overview}</p>\r\n                                        <p>Duração: {movie.runtime} minutos</p>\r\n                                        <>\r\n                                            {movie.genres.map((g) => (\r\n                                                <span\r\n                                                    className=\"me-3 text-info\"\r\n                                                    key={g.id}\r\n                                                >\r\n                                                    {g.name}\r\n                                                </span>\r\n                                            ))}\r\n                                        </>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            </MDBContainer>\r\n                            <MDBContainer>\r\n                                <>\r\n                                    {reviews &&\r\n                                        reviews.map((r) => (\r\n                                            <p key={r.id}>{r.content}</p>\r\n                                        ))}\r\n                                </>\r\n                            </MDBContainer>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":";;;AAAA;AACA,OAAO,oBAAP;AACA,SAASA,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAEIC,eAFJ,EAIIC,eAJJ,QAKO,qBALP;;;;AAOA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAgB,IAAhB,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAmB,IAAnB,CAAtC;EACA,MAAM;IAAEQ;EAAF,IAAcV,SAAS,EAA7B;;EAEA,MAAMW,QAAQ,GAAIC,GAAD,IAA0B;IACvC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MACzB,OAAO,KAAP;IACH;;IAED,IAAIA,GAAG,CAACC,IAAJ,OAAe,EAAnB,EAAuB;MACnB,OAAO,KAAP;IACH;;IAED,OAAO,CAACC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,GAAD,CAAnB,CAAR;EACH,CAVD;;EAYAX,SAAS,CAAC,MAAM;IACZ,IAAIS,OAAO,IAAIC,QAAQ,CAACD,OAAD,CAAvB,EAAkC;MAC9B,MAAMM,iBAAiB,GAAG,YAAY;QAClCT,QAAQ,CAAC,MAAMJ,eAAe,CAACc,QAAQ,CAACP,OAAD,CAAT,CAAtB,CAAR;MACH,CAFD;;MAIA,MAAMQ,YAAY,GAAG,YAAY;QAC7BT,UAAU,CAAC,MAAML,eAAe,CAACa,QAAQ,CAACP,OAAD,CAAT,EAAoB,OAApB,CAAtB,CAAV;MACH,CAFD;;MAIAM,iBAAiB;MACjBE,YAAY;IACf;EACJ,CAbQ,EAaN,CAACR,OAAD,CAbM,CAAT;EAeA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,UAAf;MAAA,WACKJ,KAAK,IAAIA,KAAK,CAACa,aAAf,iBACG;QACI,SAAS,EAAC,iBADd;QAEI,GAAG,EAAG,sCAAqCb,KAAK,CAACa,aAAc,EAFnE;QAGI,GAAG,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA,QAFR,eAQI;QACI,SAAS,EAAC,MADd;QAEI,KAAK,EAAE;UACHC,eAAe,EAAE,oBADd;UAEHC,MAAM,EAAE;QAFL,CAFX;QAAA,UAOKf,KAAK,iBACF;UAAK,SAAS,EAAC,gBAAf;UAAA,wBACI,QAAC,YAAD;YAAA,uBACI,QAAC,MAAD;cAAQ,MAAM,MAAd;cAAA,wBACI,QAAC,MAAD;gBAAQ,IAAI,EAAC,WAAb;gBAAyB,MAAM,MAA/B;gBAAA,WACKA,KAAK,CAACgB,WAAN,iBACG;kBACI,GAAG,EACC,oCACAhB,KAAK,CAACgB,WAHd;kBAKI,SAAS,EAAC,gCALd;kBAMI,GAAG,EAAC,oBANR;kBAOI,KAAK,EAAE;oBAAEC,SAAS,EAAE;kBAAb;gBAPX;kBAAA;kBAAA;kBAAA;gBAAA,QAFR,EAYK,CAACjB,KAAK,CAACgB,WAAP,iBACG;kBACI,GAAG,EAAC,qBADR;kBAEI,SAAS,EAAC,gCAFd;kBAGI,GAAG,EAAC,iBAHR;kBAII,KAAK,EAAE;oBAAEC,SAAS,EAAE;kBAAb;gBAJX;kBAAA;kBAAA;kBAAA;gBAAA,QAbR;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAsBI,QAAC,MAAD;gBAAQ,IAAI,EAAC,IAAb;gBAAA,wBACI;kBAAA,UAAKjB,KAAK,CAACkB;gBAAX;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,EAEKlB,KAAK,CAACmB,OAAN,iBACG;kBAAI,KAAK,EAAE;oBAAEC,SAAS,EAAE;kBAAb,CAAX;kBAAA,iBACMpB,KAAK,CAACmB,OADZ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAHR,eAOI;kBAAA,UAAInB,KAAK,CAACqB;gBAAV;kBAAA;kBAAA;kBAAA;gBAAA,QAPJ,eAQI;kBAAA,8BAAarB,KAAK,CAACsB,OAAnB;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QARJ,eASI;kBAAA,UACKtB,KAAK,CAACuB,MAAN,CAAaC,GAAb,CAAkBC,CAAD,iBACd;oBACI,SAAS,EAAC,gBADd;oBAAA,UAIKA,CAAC,CAACC;kBAJP,GAESD,CAAC,CAACE,EAFX;oBAAA;oBAAA;oBAAA;kBAAA,QADH;gBADL,iBATJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAtBJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eA8CI,QAAC,YAAD;YAAA,uBACI;cAAA,UACKzB,OAAO,IACJA,OAAO,CAACsB,GAAR,CAAaI,CAAD,iBACR;gBAAA,UAAeA,CAAC,CAACC;cAAjB,GAAQD,CAAC,CAACD,EAAV;gBAAA;gBAAA;gBAAA;cAAA,QADJ;YAFR;UADJ;YAAA;YAAA;YAAA;UAAA,QA9CJ;QAAA;UAAA;UAAA;UAAA;QAAA;MARR;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AA8EH,CA9GD;;GAAM5B,S;UAGkBL,S;;;KAHlBK,S;AAgHN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}
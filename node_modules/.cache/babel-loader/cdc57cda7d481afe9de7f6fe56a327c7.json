{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Desktop\\\\Code\\\\Movie Finder\\\\moviefinder\\\\src\\\\components\\\\movie\\\\content\\\\movie-keywords.tsx\",\n    _s = $RefreshSig$();\n\nimport '../../../styles/main.css';\nimport { MDBContainer, MDBBtn } from 'mdb-react-ui-kit';\nimport { getMovieKeywords } from '../../../scripts/requests';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieKeywords = props => {\n  _s();\n\n  const [movieKeywords, setMovieKeywords] = useState(null);\n  useEffect(() => {\n    if (props.movieId > 0) {\n      const fetchMovieKeywords = async () => {\n        setMovieKeywords(await getMovieKeywords(props.movieId));\n      };\n\n      fetchMovieKeywords();\n    }\n  }, [props.movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movieKeywords && /*#__PURE__*/_jsxDEV(MDBContainer, {\n      className: \"mt-4\",\n      style: {\n        height: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-info\",\n        children: \"Palavras-chave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), movieKeywords.map((k, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/MovieFinder?keyword=${k.id}`,\n        onClick: window.location.reload,\n        children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n          rounded: true,\n          className: \"m-2 ms-0 transparentBG active\",\n          color: \"info\",\n          children: k.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(MovieKeywords, \"IaycoAYcuDmSkF1dJBpp1cBhFls=\");\n\n_c = MovieKeywords;\nexport default MovieKeywords;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieKeywords\");","map":{"version":3,"names":["MDBContainer","MDBBtn","getMovieKeywords","useEffect","useState","Link","MovieKeywords","props","movieKeywords","setMovieKeywords","movieId","fetchMovieKeywords","height","map","k","index","id","window","location","reload","name"],"sources":["C:/Users/gusta/Desktop/Code/Movie Finder/moviefinder/src/components/movie/content/movie-keywords.tsx"],"sourcesContent":["import '../../../styles/main.css';\r\nimport { MDBContainer, MDBBtn } from 'mdb-react-ui-kit';\r\nimport { IKeyword, getMovieKeywords } from '../../../scripts/requests';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IMovieKeywordsProps {\r\n    movieId: number;\r\n}\r\n\r\nconst MovieKeywords = (props: IMovieKeywordsProps) => {\r\n    const [movieKeywords, setMovieKeywords] = useState<IKeyword[] | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (props.movieId > 0) {\r\n            const fetchMovieKeywords = async () => {\r\n                setMovieKeywords(await getMovieKeywords(props.movieId));\r\n            };\r\n\r\n            fetchMovieKeywords();\r\n        }\r\n    }, [props.movieId]);\r\n\r\n    return (\r\n        <>\r\n            {movieKeywords && (\r\n                <MDBContainer className=\"mt-4\" style={{ height: 'auto' }}>\r\n                    <h2 className=\"text-info\">Palavras-chave</h2>\r\n                    {movieKeywords.map((k, index) => (\r\n                        <Link\r\n                            to={`/MovieFinder?keyword=${k.id}`}\r\n                            onClick={window.location.reload}\r\n                        >\r\n                            <MDBBtn\r\n                                rounded\r\n                                className=\"m-2 ms-0 transparentBG active\"\r\n                                color=\"info\"\r\n                                key={index}\r\n                            >\r\n                                {k.name}\r\n                            </MDBBtn>\r\n                        </Link>\r\n                    ))}\r\n                </MDBContainer>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MovieKeywords;\r\n"],"mappings":";;;AAAA,OAAO,0BAAP;AACA,SAASA,YAAT,EAAuBC,MAAvB,QAAqC,kBAArC;AACA,SAAmBC,gBAAnB,QAA2C,2BAA3C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAMA,MAAMC,aAAa,GAAIC,KAAD,IAAgC;EAAA;;EAClD,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAoB,IAApB,CAAlD;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAII,KAAK,CAACG,OAAN,GAAgB,CAApB,EAAuB;MACnB,MAAMC,kBAAkB,GAAG,YAAY;QACnCF,gBAAgB,CAAC,MAAMP,gBAAgB,CAACK,KAAK,CAACG,OAAP,CAAvB,CAAhB;MACH,CAFD;;MAIAC,kBAAkB;IACrB;EACJ,CARQ,EAQN,CAACJ,KAAK,CAACG,OAAP,CARM,CAAT;EAUA,oBACI;IAAA,UACKF,aAAa,iBACV,QAAC,YAAD;MAAc,SAAS,EAAC,MAAxB;MAA+B,KAAK,EAAE;QAAEI,MAAM,EAAE;MAAV,CAAtC;MAAA,wBACI;QAAI,SAAS,EAAC,WAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKJ,aAAa,CAACK,GAAd,CAAkB,CAACC,CAAD,EAAIC,KAAJ,kBACf,QAAC,IAAD;QACI,EAAE,EAAG,wBAAuBD,CAAC,CAACE,EAAG,EADrC;QAEI,OAAO,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAF7B;QAAA,uBAII,QAAC,MAAD;UACI,OAAO,MADX;UAEI,SAAS,EAAC,+BAFd;UAGI,KAAK,EAAC,MAHV;UAAA,UAMKL,CAAC,CAACM;QANP,GAISL,KAJT;UAAA;UAAA;UAAA;QAAA;MAJJ;QAAA;QAAA;QAAA;MAAA,QADH,CAFL;IAAA;MAAA;MAAA;MAAA;IAAA;EAFR,iBADJ;AAwBH,CArCD;;GAAMT,a;;KAAAA,a;AAuCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}
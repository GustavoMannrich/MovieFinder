{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Desktop\\\\Code\\\\Movie Finder\\\\moviefinder\\\\src\\\\components\\\\movie-page.tsx\",\n    _s = $RefreshSig$();\n\nimport '../styles/content.css';\nimport '../styles/main.css';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from '../scripts/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MoviePage = () => {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n  const {\n    movieID\n  } = useParams();\n\n  const isNumber = str => {\n    if (typeof str !== 'string') {\n      return false;\n    }\n\n    if (str.trim() === '') {\n      return false;\n    }\n\n    return !Number.isNaN(Number(str));\n  };\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      if (movieID && isNumber(movieID)) {\n        setMovie(await getMovieDetails(parseInt(movieID)));\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-image\",\n          children: [movie.backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n            className: \"img-fluid\",\n            alt: \"Sample\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mask\",\n            style: {\n              backgroundColor: 'rgba(0, 0, 0, 0.6)'\n            },\n            children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-white m-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), movie.tagline && /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"\\\"\", movie.tagline, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 41\n              }, this), movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: 'https://image.tmdb.org/t/p/w500' + movie.poster_path,\n                className: \"img-fluid shadow-4 m-3\",\n                alt: \"P\\xF4ster do filme\",\n                style: {\n                  maxHeight: '275px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this), movie.backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: 'https://image.tmdb.org/t/p/w500' + movie.backdrop_path,\n                className: \"img-fluid shadow-4 m-3\",\n                alt: \"P\\xF4ster do filme\",\n                style: {\n                  maxHeight: '275px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Dura\\xE7\\xE3o: \", movie.runtime, \" minutos\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: movie.genres.map(g => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"me-3 text-info\",\n                  children: g.name\n                }, g.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MoviePage, \"JmQ6zbhVrVniHb7QJ2rqFPxZHYA=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["useParams","useEffect","useState","getMovieDetails","MoviePage","movie","setMovie","movieID","isNumber","str","trim","Number","isNaN","fetchMovieDetails","parseInt","backdrop_path","backgroundColor","title","tagline","poster_path","maxHeight","overview","runtime","genres","map","g","name","id"],"sources":["C:/Users/gusta/Desktop/Code/Movie Finder/moviefinder/src/components/movie-page.tsx"],"sourcesContent":["import '../styles/content.css';\r\nimport '../styles/main.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { IMovie, getMovieDetails } from '../scripts/requests';\r\n\r\nconst MoviePage = () => {\r\n    const [movie, setMovie] = useState<IMovie | null>(null);\r\n    const { movieID } = useParams();\r\n\r\n    const isNumber = (str: string): boolean => {\r\n        if (typeof str !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        if (str.trim() === '') {\r\n            return false;\r\n        }\r\n\r\n        return !Number.isNaN(Number(str));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchMovieDetails = async () => {\r\n            if (movieID && isNumber(movieID)) {\r\n                setMovie(await getMovieDetails(parseInt(movieID)));\r\n            }\r\n        };\r\n\r\n        fetchMovieDetails();\r\n    }, [movieID]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content-main\">\r\n                <div className=\"content\">\r\n                    <div className=\"bg-image\">\r\n                        {movie.backdrop_path && (\r\n                            <img\r\n                                src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n                                className=\"img-fluid\"\r\n                                alt=\"Sample\"\r\n                            />\r\n                        )}\r\n                        <div\r\n                            className=\"mask\"\r\n                            style={{ backgroundColor: 'rgba(0, 0, 0, 0.6)' }}\r\n                        >\r\n                            {movie && (\r\n                                <div className=\"text-white m-5\">\r\n                                    <h1>{movie.title}</h1>\r\n                                    {movie.tagline && (\r\n                                        <h4>\"{movie.tagline}\"</h4>\r\n                                    )}\r\n                                    {movie.poster_path && (\r\n                                        <img\r\n                                            src={\r\n                                                'https://image.tmdb.org/t/p/w500' +\r\n                                                movie.poster_path\r\n                                            }\r\n                                            className=\"img-fluid shadow-4 m-3\"\r\n                                            alt=\"Pôster do filme\"\r\n                                            style={{ maxHeight: '275px' }}\r\n                                        />\r\n                                    )}\r\n                                    {movie.backdrop_path && (\r\n                                        <img\r\n                                            src={\r\n                                                'https://image.tmdb.org/t/p/w500' +\r\n                                                movie.backdrop_path\r\n                                            }\r\n                                            className=\"img-fluid shadow-4 m-3\"\r\n                                            alt=\"Pôster do filme\"\r\n                                            style={{ maxHeight: '275px' }}\r\n                                        />\r\n                                    )}\r\n                                    <p>{movie.overview}</p>\r\n                                    <p>Duração: {movie.runtime} minutos</p>\r\n\r\n                                    <>\r\n                                        {movie.genres.map((g) => (\r\n                                            <span\r\n                                                className=\"me-3 text-info\"\r\n                                                key={g.id}\r\n                                            >\r\n                                                {g.name}\r\n                                            </span>\r\n                                        ))}\r\n                                    </>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const axios = require('axios');\n\nexport const getGeneros = async () => {\n  const generos = [];\n  await axios.get('http://localhost:3001/generos').then(response => {\n    response.data.genres.forEach(g => {\n      generos.push(g);\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n\n  const customSort = (a, b) => {\n    if (a.name < b.name) {\n      return -1;\n    }\n\n    if (a.name > b.name) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  generos.sort(customSort);\n  return generos;\n};\nexport const getMovies = async (genero, page, sort, pessoa, dataInicial, dataFinal, voteCount) => {\n  const movies = {\n    movie_details: [],\n    page: 0,\n    total_pages: 0,\n    total_results: 0\n  };\n  await axios.get('http://localhost:3001/descobrir', {\n    params: {\n      genero: genero,\n      page: page,\n      sort: sort,\n      pessoa: pessoa,\n      dataInicial: dataInicial,\n      dataFinal: dataFinal,\n      voteCount: voteCount\n    }\n  }).then(response => {\n    if (response.data) {\n      response.data.movies.forEach(m => {\n        movies.movie_details.push(m);\n      });\n      movies.page = response.data.page;\n      movies.total_pages = response.data.total_pages;\n      movies.total_results = response.data.total_results;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movies;\n};\nexport const getMoviesByKeyword = async keyword => {\n  var movies = [];\n\n  if (keyword.length < 2) {\n    return movies;\n  }\n\n  await axios.get('http://localhost:3001/moviesByKeyword', {\n    params: {\n      keyword: keyword\n    }\n  }).then(response => {\n    if (response.data) {\n      response.data.forEach(movie => {\n        movies.push({\n          value: movie.id,\n          label: movie.title\n        });\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movies;\n};\nexport const getPeopleByKeyword = async keyword => {\n  var people = [];\n\n  if (keyword.length < 2) {\n    return people;\n  }\n\n  await axios.get('http://localhost:3001/peopleByKeyword', {\n    params: {\n      keyword: keyword\n    }\n  }).then(response => {\n    if (response.data) {\n      response.data.forEach(person => {\n        people.push({\n          value: person.id,\n          label: person.name\n        });\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return people;\n};\nexport const getMovieDetails = async id => {\n  let movie = undefined;\n  await axios.get('http://localhost:3001/movie', {\n    params: {\n      id: id\n    }\n  }).then(_ref => {\n    let {\n      data\n    } = _ref;\n\n    if (data) {\n      if (data.length > 0) {\n        movie = data[0];\n      }\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movie;\n};\nexport const getMovieReviews = async (movieId, language) => {\n  let reviews = null;\n  await axios.get('http://localhost:3001/reviews', {\n    params: {\n      movieId: movieId,\n      language: language\n    }\n  }).then(_ref2 => {\n    let {\n      data\n    } = _ref2;\n\n    if (data) {\n      if (data.length > 0) {\n        reviews = data;\n\n        if (reviews) {\n          // As reviews vem da mais antiga para a mais recente,\n          // dai tem que inverter o array pra ficar as mais\n          // recentes no comeÃ§o\n          reviews.reverse();\n        }\n      }\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return reviews;\n};\nexport const getCastMembers = async movieId => {\n  let castMembers = {\n    cast: null,\n    directors: ''\n  };\n  await axios.get('http://localhost:3001/movieCast', {\n    params: {\n      movieId: movieId\n    }\n  }).then(_ref3 => {\n    var _data$castMembers;\n\n    let {\n      data\n    } = _ref3;\n\n    if ((data === null || data === void 0 ? void 0 : (_data$castMembers = data.castMembers) === null || _data$castMembers === void 0 ? void 0 : _data$castMembers.length) > 0) {\n      castMembers.cast = data.castMembers;\n    }\n\n    castMembers.directors = data.directors;\n  }).catch(error => {\n    console.log(error);\n  });\n  return castMembers;\n};\nexport const getWatchProviders = async movieId => {\n  let watchProviders = null;\n  await axios.get('http://localhost:3001/watchProviders', {\n    params: {\n      movieId: movieId\n    }\n  }).then(_ref4 => {\n    let {\n      data\n    } = _ref4;\n\n    if (data) {\n      watchProviders = data;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return watchProviders;\n};\nexport const getMoviesTrending = async () => {\n  const movies = {\n    movie_details: [],\n    page: 0,\n    total_pages: 0,\n    total_results: 0\n  };\n  await axios.get('http://localhost:3001/trending').then(response => {\n    if (response.data) {\n      response.data.movies.forEach(m => {\n        movies.movie_details.push(m);\n      });\n      movies.page = response.data.page;\n      movies.total_pages = response.data.total_pages;\n      movies.total_results = response.data.total_results;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movies;\n};\nexport const getSimilarMovies = async movieId => {\n  let movies = null;\n  await axios.get('http://localhost:3001/similarMovies', {\n    params: {\n      movieId: movieId\n    }\n  }).then(_ref5 => {\n    let {\n      data\n    } = _ref5;\n\n    if (data && data.length > 0) {\n      movies = data;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return movies;\n};\nexport const getMovieKeywords = async movieId => {\n  let keywords = null;\n  await axios.get('http://localhost:3001/movieKeywords', {\n    params: {\n      movieId: movieId\n    }\n  }).then(_ref6 => {\n    let {\n      data\n    } = _ref6;\n\n    if (data && data.length > 0) {\n      keywords = data;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return keywords;\n};\nexport const getPeopleByID = async peopleIds => {\n  let people = [];\n  await axios.get('http://localhost:3001/people', {\n    params: {\n      peopleIds: peopleIds\n    }\n  }).then(_ref7 => {\n    let {\n      data\n    } = _ref7;\n\n    if (data && data.length > 0) {\n      data.forEach(p => {\n        people.push({\n          value: p.id,\n          label: p.name\n        });\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return people;\n};\nexport const getVideos = async (movieId, language) => {\n  let videos = null;\n  await axios.get('http://localhost:3001/videos', {\n    params: {\n      movieId: movieId,\n      language: language\n    }\n  }).then(_ref8 => {\n    let {\n      data\n    } = _ref8;\n\n    if (data) {\n      var _data$trailers, _data$clips, _data$behindTheScenes, _data$featurettes, _data$teasers, _data$others;\n\n      if (((_data$trailers = data.trailers) === null || _data$trailers === void 0 ? void 0 : _data$trailers.length) > 0 || ((_data$clips = data.clips) === null || _data$clips === void 0 ? void 0 : _data$clips.length) > 0 || ((_data$behindTheScenes = data.behindTheScenes) === null || _data$behindTheScenes === void 0 ? void 0 : _data$behindTheScenes.length) > 0 || ((_data$featurettes = data.featurettes) === null || _data$featurettes === void 0 ? void 0 : _data$featurettes.length) > 0 || ((_data$teasers = data.teasers) === null || _data$teasers === void 0 ? void 0 : _data$teasers.length) > 0 || ((_data$others = data.others) === null || _data$others === void 0 ? void 0 : _data$others.length) > 0) {\n        videos = data;\n      }\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return videos;\n};","map":{"version":3,"names":["axios","require","getGeneros","generos","get","then","response","data","genres","forEach","g","push","catch","error","console","log","customSort","a","b","name","sort","getMovies","genero","page","pessoa","dataInicial","dataFinal","voteCount","movies","movie_details","total_pages","total_results","params","m","getMoviesByKeyword","keyword","length","movie","value","id","label","title","getPeopleByKeyword","people","person","getMovieDetails","undefined","getMovieReviews","movieId","language","reviews","reverse","getCastMembers","castMembers","cast","directors","getWatchProviders","watchProviders","getMoviesTrending","getSimilarMovies","getMovieKeywords","keywords","getPeopleByID","peopleIds","p","getVideos","videos","trailers","clips","behindTheScenes","featurettes","teasers","others"],"sources":["C:/Users/gusta/Desktop/Code/Movie Finder/moviefinder/src/scripts/requests.ts"],"sourcesContent":["const axios = require('axios');\r\n\r\ninterface IItem {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface IItems extends Array<IItem> {}\r\n\r\nexport const getGeneros = async (): Promise<IItems> => {\r\n    const generos: IItems = [];\r\n\r\n    await axios\r\n        .get('http://localhost:3001/generos')\r\n        .then((response: any) => {\r\n            response.data.genres.forEach((g: IItem) => {\r\n                generos.push(g);\r\n            });\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    const customSort = (a: IItem, b: IItem) => {\r\n        if (a.name < b.name) {\r\n            return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    generos.sort(customSort);\r\n\r\n    return generos;\r\n};\r\n\r\nexport interface IFilter {\r\n    genero: string;\r\n    page: number;\r\n    sort: string;\r\n    pessoa: string;\r\n    dataInicial: Date | null;\r\n    dataFinal: Date | null;\r\n    voteCount: number;\r\n    tipoBusca: string;\r\n}\r\n\r\ninterface IMovieDetails {\r\n    poster_path: string;\r\n    adult: boolean;\r\n    overview: string;\r\n    release_date: string;\r\n    genres: Array<number>;\r\n    id: number;\r\n    original_title: string;\r\n    title: string;\r\n    backdrop_path: string;\r\n    vote_average: number;\r\n    budget: number;\r\n    revenue: number;\r\n    runtime: number;\r\n    tagline: string;\r\n}\r\n\r\nexport interface IMovies {\r\n    movie_details: Array<IMovieDetails>;\r\n    page: number;\r\n    total_pages: number;\r\n    total_results: number;\r\n}\r\n\r\nexport const getMovies = async (\r\n    genero: string,\r\n    page: number,\r\n    sort: string,\r\n    pessoa: string,\r\n    dataInicial: Date | null,\r\n    dataFinal: Date | null,\r\n    voteCount: number\r\n): Promise<IMovies> => {\r\n    const movies: IMovies = {\r\n        movie_details: [],\r\n        page: 0,\r\n        total_pages: 0,\r\n        total_results: 0,\r\n    };\r\n\r\n    await axios\r\n        .get('http://localhost:3001/descobrir', {\r\n            params: {\r\n                genero: genero,\r\n                page: page,\r\n                sort: sort,\r\n                pessoa: pessoa,\r\n                dataInicial: dataInicial,\r\n                dataFinal: dataFinal,\r\n                voteCount: voteCount,\r\n            },\r\n        })\r\n        .then((response: any) => {\r\n            if (response.data) {\r\n                response.data.movies.forEach((m: IMovieDetails) => {\r\n                    movies.movie_details.push(m);\r\n                });\r\n\r\n                movies.page = response.data.page;\r\n                movies.total_pages = response.data.total_pages;\r\n                movies.total_results = response.data.total_results;\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return movies;\r\n};\r\n\r\nexport const getMoviesByKeyword = async (keyword: string) => {\r\n    var movies: { value: number; label: string }[] = [];\r\n\r\n    if (keyword.length < 2) {\r\n        return movies;\r\n    }\r\n\r\n    await axios\r\n        .get('http://localhost:3001/moviesByKeyword', {\r\n            params: {\r\n                keyword: keyword,\r\n            },\r\n        })\r\n        .then((response: any) => {\r\n            if (response.data) {\r\n                response.data.forEach(\r\n                    (movie: { id: number; title: string }) => {\r\n                        movies.push({ value: movie.id, label: movie.title });\r\n                    }\r\n                );\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return movies;\r\n};\r\n\r\nexport const getPeopleByKeyword = async (keyword: string) => {\r\n    var people: { value: number; label: string }[] = [];\r\n\r\n    if (keyword.length < 2) {\r\n        return people;\r\n    }\r\n\r\n    await axios\r\n        .get('http://localhost:3001/peopleByKeyword', {\r\n            params: {\r\n                keyword: keyword,\r\n            },\r\n        })\r\n        .then((response: any) => {\r\n            if (response.data) {\r\n                response.data.forEach(\r\n                    (person: { id: number; name: string }) => {\r\n                        people.push({ value: person.id, label: person.name });\r\n                    }\r\n                );\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return people;\r\n};\r\n\r\ninterface IGenre {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface IProductionCompany {\r\n    id: number;\r\n    logo_path: string;\r\n    name: string;\r\n    origin_country: string;\r\n}\r\n\r\ninterface IProductionCountry {\r\n    iso_3166_1: string;\r\n    name: string;\r\n}\r\n\r\ninterface ISpokenLanguage {\r\n    iso_639_1: string;\r\n    name: string;\r\n}\r\n\r\nexport interface IMovie {\r\n    adult: boolean;\r\n    backdrop_path: string;\r\n    belongs_to_collection?: any;\r\n    budget: number;\r\n    genres: IGenre[];\r\n    homepage: string;\r\n    id: number;\r\n    imdb_id: string;\r\n    original_language: string;\r\n    original_title: string;\r\n    overview: string;\r\n    popularity: number;\r\n    poster_path?: any;\r\n    production_companies: IProductionCompany[];\r\n    production_countries: IProductionCountry[];\r\n    release_date: string;\r\n    revenue: number;\r\n    runtime: number;\r\n    spoken_languages: ISpokenLanguage[];\r\n    status: string;\r\n    tagline: string;\r\n    title: string;\r\n    video: boolean;\r\n    vote_average: number;\r\n    vote_count: number;\r\n}\r\n\r\nexport const getMovieDetails = async (\r\n    id: number\r\n): Promise<IMovie | undefined> => {\r\n    let movie: IMovie | undefined = undefined;\r\n\r\n    await axios\r\n        .get('http://localhost:3001/movie', {\r\n            params: {\r\n                id: id,\r\n            },\r\n        })\r\n        .then(({ data }: any) => {\r\n            if (data) {\r\n                if (data.length > 0) {\r\n                    movie = data[0];\r\n                }\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return movie;\r\n};\r\n\r\nexport interface IAuthorDetails {\r\n    name: string;\r\n    username: string;\r\n    avatar_path: string;\r\n    rating: number;\r\n}\r\n\r\nexport interface IReview {\r\n    author: string;\r\n    author_details: IAuthorDetails;\r\n    content: string;\r\n    created_at: Date;\r\n    id: string;\r\n    updated_at: Date;\r\n    url: string;\r\n}\r\n\r\nexport const getMovieReviews = async (\r\n    movieId: number,\r\n    language: string\r\n): Promise<IReview[] | null> => {\r\n    let reviews: IReview[] | null = null;\r\n\r\n    await axios\r\n        .get('http://localhost:3001/reviews', {\r\n            params: {\r\n                movieId: movieId,\r\n                language: language,\r\n            },\r\n        })\r\n        .then(({ data }: any) => {\r\n            if (data) {\r\n                if (data.length > 0) {\r\n                    reviews = data;\r\n\r\n                    if (reviews) {\r\n                        // As reviews vem da mais antiga para a mais recente,\r\n                        // dai tem que inverter o array pra ficar as mais\r\n                        // recentes no comeÃ§o\r\n                        reviews.reverse();\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return reviews;\r\n};\r\n\r\nexport interface ICastMember {\r\n    adult: boolean;\r\n    gender: number;\r\n    id: number;\r\n    known_for_department: string;\r\n    name: string;\r\n    original_name: string;\r\n    popularity: number;\r\n    profile_path: string;\r\n    cast_id: number;\r\n    character: string;\r\n    credit_id: string;\r\n    order: number;\r\n}\r\n\r\nexport interface ICastMembers {\r\n    cast: ICastMember[] | null;\r\n    directors: string;\r\n}\r\n\r\nexport const getCastMembers = async (\r\n    movieId: number\r\n): Promise<ICastMembers | null> => {\r\n    let castMembers: ICastMembers = { cast: null, directors: '' };\r\n\r\n    await axios\r\n        .get('http://localhost:3001/movieCast', {\r\n            params: {\r\n                movieId: movieId,\r\n            },\r\n        })\r\n        .then(({ data }: any) => {\r\n            if (data?.castMembers?.length > 0) {\r\n                castMembers.cast = data.castMembers;\r\n            }\r\n            castMembers.directors = data.directors;\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return castMembers;\r\n};\r\n\r\ninterface IWatchProvider {\r\n    display_priority: number;\r\n    logo_path: string;\r\n    provider_id: number;\r\n    provider_name: string;\r\n}\r\n\r\nexport interface IWatchProviders {\r\n    isAvailable: boolean;\r\n    link: string;\r\n    flatrate: IWatchProvider[];\r\n    rent: IWatchProvider[];\r\n    buy: IWatchProvider[];\r\n}\r\n\r\nexport const getWatchProviders = async (\r\n    movieId: number\r\n): Promise<IWatchProviders | null> => {\r\n    let watchProviders: IWatchProviders | null = null;\r\n\r\n    await axios\r\n        .get('http://localhost:3001/watchProviders', {\r\n            params: {\r\n                movieId: movieId,\r\n            },\r\n        })\r\n        .then(({ data }: any) => {\r\n            if (data) {\r\n                watchProviders = data;\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return watchProviders;\r\n};\r\n\r\nexport const getMoviesTrending = async (): Promise<IMovies> => {\r\n    const movies: IMovies = {\r\n        movie_details: [],\r\n        page: 0,\r\n        total_pages: 0,\r\n        total_results: 0,\r\n    };\r\n\r\n    await axios\r\n        .get('http://localhost:3001/trending')\r\n        .then((response: any) => {\r\n            if (response.data) {\r\n                response.data.movies.forEach((m: IMovieDetails) => {\r\n                    movies.movie_details.push(m);\r\n                });\r\n\r\n                movies.page = response.data.page;\r\n                movies.total_pages = response.data.total_pages;\r\n                movies.total_results = response.data.total_results;\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return movies;\r\n};\r\n\r\nexport const getSimilarMovies = async (\r\n    movieId: number\r\n): Promise<IMovie[] | null> => {\r\n    let movies: IMovie[] | null = null;\r\n\r\n    await axios\r\n        .get('http://localhost:3001/similarMovies', {\r\n            params: {\r\n                movieId: movieId,\r\n            },\r\n        })\r\n        .then(({ data }: any) => {\r\n            if (data && data.length > 0) {\r\n                movies = data;\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return movies;\r\n};\r\n\r\nexport interface IKeyword {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport const getMovieKeywords = async (\r\n    movieId: number\r\n): Promise<IKeyword[] | null> => {\r\n    let keywords: IKeyword[] | null = null;\r\n\r\n    await axios\r\n        .get('http://localhost:3001/movieKeywords', {\r\n            params: {\r\n                movieId: movieId,\r\n            },\r\n        })\r\n        .then(({ data }: any) => {\r\n            if (data && data.length > 0) {\r\n                keywords = data;\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return keywords;\r\n};\r\n\r\nexport interface IPerson {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface ISelectOption {\r\n    value: number;\r\n    label: string;\r\n}\r\n\r\nexport const getPeopleByID = async (\r\n    peopleIds: string\r\n): Promise<ISelectOption[]> => {\r\n    let people: ISelectOption[] = [];\r\n\r\n    await axios\r\n        .get('http://localhost:3001/people', {\r\n            params: {\r\n                peopleIds: peopleIds,\r\n            },\r\n        })\r\n        .then(({ data }: any) => {\r\n            if (data && data.length > 0) {\r\n                data.forEach((p: IPerson) => {\r\n                    people.push({ value: p.id, label: p.name });\r\n                });\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return people;\r\n};\r\n\r\ninterface IVideo {\r\n    iso_639_1: string;\r\n    iso_3166_1: string;\r\n    name: string;\r\n    key: string;\r\n    site: string;\r\n    size: number;\r\n    type: string;\r\n    official: boolean;\r\n    published_at: Date;\r\n    id: string;\r\n}\r\n\r\nexport interface IVideos {\r\n    trailers: IVideo[];\r\n    clips: IVideo[];\r\n    behindTheScenes: IVideo[];\r\n    featurettes: IVideo[];\r\n    teasers: IVideo[];\r\n    others: IVideo[];\r\n}\r\n\r\nexport const getVideos = async (\r\n    movieId: number,\r\n    language: string\r\n): Promise<IVideos | null> => {\r\n    let videos: IVideos | null = null;\r\n\r\n    await axios\r\n        .get('http://localhost:3001/videos', {\r\n            params: {\r\n                movieId: movieId,\r\n                language: language,\r\n            },\r\n        })\r\n        .then(({ data }: any) => {\r\n            if (data) {\r\n                if (\r\n                    data.trailers?.length > 0 ||\r\n                    data.clips?.length > 0 ||\r\n                    data.behindTheScenes?.length > 0 ||\r\n                    data.featurettes?.length > 0 ||\r\n                    data.teasers?.length > 0 ||\r\n                    data.others?.length > 0\r\n                ) {\r\n                    videos = data;\r\n                }\r\n            }\r\n        })\r\n        .catch((error: any) => {\r\n            console.log(error);\r\n        });\r\n\r\n    return videos;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
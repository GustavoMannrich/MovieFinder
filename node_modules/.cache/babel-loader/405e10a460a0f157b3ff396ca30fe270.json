{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Desktop\\\\Code\\\\Movie Finder\\\\moviefinder\\\\src\\\\components\\\\movie-grid.tsx\",\n    _s = $RefreshSig$();\n\nimport { MDBRow, MDBCol, MDBContainer } from 'mdb-react-ui-kit';\nimport Movie from './movie';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieGrid = () => {\n  _s();\n\n  const {\n    data,\n    error,\n    loading\n  } = useTypedSelector(state => state.repositories);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"col-12  g-3 m-0\",\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"warning\",\n          children: \"Deu erro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"dark\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 31\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 33\n        }, this), !error && !loading && data.map(movie => /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(Movie, {\n            name: movie.title,\n            imageSRC: movie.poster_path,\n            releaseDate: movie.release_date,\n            budget: movie.budget,\n            revenue: movie.revenue,\n            rating: movie.vote_average,\n            tagline: movie.tagline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieGrid, \"TQlSPvuvHUEU/EOb/qmgM1JjJek=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = MovieGrid;\nexport default MovieGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGrid\");","map":{"version":3,"names":["MDBRow","MDBCol","MDBContainer","Movie","useTypedSelector","Alert","MovieGrid","data","error","loading","state","repositories","map","movie","title","poster_path","release_date","budget","revenue","vote_average","tagline","id"],"sources":["C:/Users/gusta/Desktop/Code/Movie Finder/moviefinder/src/components/movie-grid.tsx"],"sourcesContent":["import { MDBRow, MDBCol, MDBContainer } from 'mdb-react-ui-kit';\r\nimport Movie from './movie';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst MovieGrid = () => {\r\n    const { data, error, loading } = useTypedSelector(\r\n        (state) => state.repositories\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <MDBContainer fluid>\r\n                <MDBRow className=\"col-12  g-3 m-0\">\r\n                    <Alert variant=\"warning\">Deu erro</Alert>\r\n                    {error && <Alert variant=\"dark\">{error}</Alert>}\r\n                    {loading && <h3>Loading...</h3>}\r\n                    {!error &&\r\n                        !loading &&\r\n                        data.map((movie) => (\r\n                            <MDBCol key={movie.id}>\r\n                                <Movie\r\n                                    name={movie.title}\r\n                                    imageSRC={movie.poster_path}\r\n                                    releaseDate={movie.release_date}\r\n                                    budget={movie.budget}\r\n                                    revenue={movie.revenue}\r\n                                    rating={movie.vote_average}\r\n                                    tagline={movie.tagline}\r\n                                />\r\n                            </MDBCol>\r\n                        ))}\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieGrid;\r\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,YAAzB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,IAA2BL,gBAAgB,CAC5CM,KAAD,IAAWA,KAAK,CAACC,YAD4B,CAAjD;EAIA,oBACI;IAAA,uBACI,QAAC,YAAD;MAAc,KAAK,MAAnB;MAAA,uBACI,QAAC,MAAD;QAAQ,SAAS,EAAC,iBAAlB;QAAA,wBACI,QAAC,KAAD;UAAO,OAAO,EAAC,SAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKH,KAAK,iBAAI,QAAC,KAAD;UAAO,OAAO,EAAC,MAAf;UAAA,UAAuBA;QAAvB;UAAA;UAAA;UAAA;QAAA,QAFd,EAGKC,OAAO,iBAAI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHhB,EAIK,CAACD,KAAD,IACG,CAACC,OADJ,IAEGF,IAAI,CAACK,GAAL,CAAUC,KAAD,iBACL,QAAC,MAAD;UAAA,uBACI,QAAC,KAAD;YACI,IAAI,EAAEA,KAAK,CAACC,KADhB;YAEI,QAAQ,EAAED,KAAK,CAACE,WAFpB;YAGI,WAAW,EAAEF,KAAK,CAACG,YAHvB;YAII,MAAM,EAAEH,KAAK,CAACI,MAJlB;YAKI,OAAO,EAAEJ,KAAK,CAACK,OALnB;YAMI,MAAM,EAAEL,KAAK,CAACM,YANlB;YAOI,OAAO,EAAEN,KAAK,CAACO;UAPnB;YAAA;YAAA;YAAA;UAAA;QADJ,GAAaP,KAAK,CAACQ,EAAnB;UAAA;UAAA;UAAA;QAAA,QADJ,CANR;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA0BH,CA/BD;;GAAMf,S;UAC+BF,gB;;;KAD/BE,S;AAiCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}